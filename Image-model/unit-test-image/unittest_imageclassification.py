# -*- coding: utf-8 -*-
"""UnitTest - Imageclassification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A6VcDFEoxNX1aYyutciAxFUdYJMGypYV
"""

def testImageExtension(image_path):
  "Abdominal input test: Checks if the image used as input for the classification model is valid. Only images with the .jpg or .jpeg are accepted. Only images paths can be inputted in this test case."
  assertion_message = "Image is not the right extension, thus cannot be used. Please only use .jpg or .jpeg images."
  if not image_path.lower().endswith(('.jpg', '.jpeg')):
    raise AssertionError(assertion_message)

def testImageShape(image):
  "Abdominal input test: Checks if the image used as input for the classification model has a valid size. Only images with size 224x224 can be used for the model."
  assertion_message = "Image was not in right shape for the model. Shape should be 224x224."
  if not image.size == (224,224):
    raise AssertionError(assertion_message)

# Example correct case
from PIL import Image
path = '/content/drive/MyDrive/SE project/Data/Image Dasta/Birds images/test/AFRICAN CROWNED CRANE/1.jpg'
img_file = Image.open(path)
image = img_file.resize((224,224))
testImageExtension(path)
testImageShape(image)

# Example incorrect case - first unit test
from PIL import Image
path = '/content/drive/MyDrive/SE project/Notebooks/Classification/Image/incorrect_unittestcase_exampleimage.png'
img_file = Image.open(path)
image = img_file.resize((200,200))
testImageExtension(path)

# Example incorrect case - second unit test
testImageShape(image)